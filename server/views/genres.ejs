<!DOCTYPE html>
<html lang="en-US">

<head>
    <meta charset="utf-8">
    <title>
        <%= title %>
    </title>
    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
    <link rel="stylesheet" href="/stylesheets/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        * {
            box-sizing: border-box;
        }

        .wrapper {
            display: flex;
        }

        .img-zoom-container {
            border: 1px solid #000000;
            position: relative;
            flex: 1;
            margin-right: 10px;
            /* Optional spacing between the columns */
        }

        .img-zoom-lens {
            position: absolute;
            border: 1px solid #000000;
            /* set the size of the lens: */
            width: 30px;
            height: 30px;
        }

        .img-zoom-result {
            border: 1px solid #000000;
            /* set the size of the result div: */
            width: 512px;
            height: 400px;
            flex: 1;
        }
    </style>
    <script>
        function imageZoom(imgID, resultID) {
            var img, lens, result, cx, cy;
            img = document.getElementById(imgID);
            result = document.getElementById(resultID);
            /* create lens: */
            lens = document.createElement("DIV");
            lens.setAttribute("class", "img-zoom-lens");
            /* insert lens: */
            img.parentElement.insertBefore(lens, img);
            /* calculate the ratio between result DIV and lens: */
            cx = result.offsetWidth / lens.offsetWidth;
            cy = result.offsetHeight / lens.offsetHeight;
            /* set background properties for the result DIV: */
            result.style.backgroundImage = "url('" + img.src + "')";
            result.style.backgroundSize = (img.width * cx) + "px " + (img.height * cy) + "px";
            /* execute a function when someone moves the cursor over the image, or the lens: */
            lens.addEventListener("mousemove", moveLens);
            img.addEventListener("mousemove", moveLens);
            /* and also for touch screens: */
            lens.addEventListener("touchmove", moveLens);
            img.addEventListener("touchmove", moveLens);
            function moveLens(e) {
                var pos, x, y;
                /* prevent any other actions that may occur when moving over the image: */
                e.preventDefault();
                /* get the cursor's x and y positions: */
                pos = getCursorPos(e);
                /* calculate the position of the lens: */
                x = pos.x - (lens.offsetWidth / 2);
                y = pos.y - (lens.offsetHeight / 2);
                /* prevent the lens from being positioned outside the image: */
                if (x > img.width - lens.offsetWidth) { x = img.width - lens.offsetWidth; }
                if (x < 0) { x = 0; }
                if (y > img.height - lens.offsetHeight) { y = img.height - lens.offsetHeight; }
                if (y < 0) { y = 0; }
                /* set the position of the lens: */
                lens.style.left = x + "px";
                lens.style.top = y + "px";
                /* display what the lens "sees": */
                result.style.backgroundPosition = "-" + (x * cx) + "px -" + (y * cy) + "px";
            }
            function getCursorPos(e) {
                var a, x = 0, y = 0;
                e = e || window.event;
                /* get the x and y positions of the image: */
                a = img.getBoundingClientRect();
                /* calculate the cursor's x and y coordinates, relative to the image: */
                x = e.pageX - a.left;
                y = e.pageY - a.top;
                /* consider any page scrolling: */
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;
                return { x: x, y: y };
            }
        }
    </script>
</head>

<body>
    <nav>
        <a href="/" class="btn btn-primary">Home</a>
    </nav>
    <hr>
    <main>

        <h1>Genres:</h1>
        <p>Mouse over the image:</p>

        <div class="wrapper">
            <div class="img-zoom-container">
                <img id="myimage" src="/images/MusicTree.png" width="512" height="220">
            </div>
            <div id="myresult" class="img-zoom-result"></div>
        </div>

        <script>
            // Initiate zoom effect:
            imageZoom("myimage", "myresult");
        </script>


        <% for (let i=0; i < genres.length; i++) { %>
            <h2><%- genres[i].name %></h2>
            <a href="<%= genres[i].url %>">Click here to view <%= genres[i].name %></a>
            <% } %>

                <p></p>
                <a href="/genre/create" class="btn btn-primary">Create a New Genre</a>

                <!-- <%- include("super-common-footer.ejs")%> -->